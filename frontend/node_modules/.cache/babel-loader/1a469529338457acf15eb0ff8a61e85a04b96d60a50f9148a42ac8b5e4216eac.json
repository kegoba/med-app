{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\n//import { BASE_URL } from \"../asset/asset\"\n\nimport axiosInstance from \"./axiosConfig\";\nexport const BASE_URL = \"http://localhost:8000/api/v1\";\nconst getToken = localStorage.getItem(\"token\");\nconst getHeaderConfig = {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${getToken}`\n  }\n};\nexport const getAllConsultation = async () => {\n  const response = await axiosInstance.get(\"/getalluserconsultation\");\n  return response.data;\n};\nexport const getSingleConsulation = async data => {\n  const response = await axiosInstance.get(\"/getsingleconsulation\", data);\n  return response.data;\n};\nexport const createConsultation = async data => {\n  const response = await axiosInstance.post(\"/createconsultation\", data);\n  return response.data;\n};\nexport const registerUser = async data => {\n  const response = await axiosInstance.post(\"/registeruser\", data);\n  return response.data;\n};\nexport const loginofficer = async data => {\n  const response = await axiosInstance.post(\"/loginuser\", data);\n  if (resp.status === 200) {\n    localStorage.setItem(\"user\", JSON.stringify(resp.data.data));\n    localStorage.setItem(\"token\", resp.data.data.token);\n    return response.data;\n  }\n  return null;\n  return response.data;\n};\nexport const loginofficers = async data => {\n  const resp = await axios.post(BASE_URL + \"/loginuser\", data, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (resp.status === 200) {\n    localStorage.setItem(\"user\", JSON.stringify(resp.data.data));\n    localStorage.setItem(\"token\", resp.data.data.token);\n    return resp;\n  }\n  return null;\n};","map":{"version":3,"names":["React","axios","axiosInstance","BASE_URL","getToken","localStorage","getItem","getHeaderConfig","headers","Authorization","getAllConsultation","response","get","data","getSingleConsulation","createConsultation","post","registerUser","loginofficer","resp","status","setItem","JSON","stringify","token","loginofficers","method"],"sources":["C:/Users/HP/med-app/frontend/src/features/services/userServices.js"],"sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\"\r\n//import { BASE_URL } from \"../asset/asset\"\r\n\r\nimport axiosInstance from \"./axiosConfig\"\r\n\r\n\r\nexport const BASE_URL = \"http://localhost:8000/api/v1\"\r\nconst getToken = localStorage.getItem(\"token\")  \r\n\r\nconst getHeaderConfig = {\r\n    headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${getToken}`,\r\n  }\r\n}\r\n\r\nexport const getAllConsultation  = async ()=> {\r\n  const response = await axiosInstance.get(\"/getalluserconsultation\");\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\nexport const getSingleConsulation  = async (data)=> {\r\n  const response = await axiosInstance.get(\"/getsingleconsulation\",data);\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\n\r\nexport const createConsultation  = async (data)=> {\r\n  const response = await axiosInstance.post(\"/createconsultation\",data);\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\nexport const registerUser  = async (data)=> {\r\n  const response = await axiosInstance.post(\"/registeruser\",data);\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\nexport const loginofficer  = async (data)=> {\r\n  const response = await axiosInstance.post(\"/loginuser\",data);\r\n  if(resp.status ===200){\r\n    localStorage.setItem(\"user\", JSON.stringify(resp.data.data))\r\n    localStorage.setItem(\"token\", (resp.data.data.token))\r\n    return response.data\r\n    \r\n   } \r\n   return null\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\n\r\n\r\n  \r\n      \r\n\r\n  export const loginofficers  = async (data) => {\r\n     const resp =  await axios.post(BASE_URL +\"/loginuser\", data,{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      \r\n    })\r\n        if(resp.status ===200){\r\n            localStorage.setItem(\"user\", JSON.stringify(resp.data.data))\r\n            localStorage.setItem(\"token\", (resp.data.data.token))\r\n            return resp\r\n            \r\n           } \r\n           return null\r\n\r\n      \r\n      \r\n   }\r\n\r\n\r\n\r\n   "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAEA,OAAOC,aAAa,MAAM,eAAe;AAGzC,OAAO,MAAMC,QAAQ,GAAG,8BAA8B;AACtD,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE9C,MAAMC,eAAe,GAAG;EACpBC,OAAO,EAAE;IACT,cAAc,EAAE,kBAAkB;IAClCC,aAAa,EAAG,UAASL,QAAS;EACpC;AACF,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAI,MAAAA,CAAA,KAAW;EAC5C,MAAMC,QAAQ,GAAG,MAAMT,aAAa,CAACU,GAAG,CAAC,yBAAyB,CAAC;EAEnE,OAAOD,QAAQ,CAACE,IAAI;AAEtB,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAI,MAAOD,IAAI,IAAI;EAClD,MAAMF,QAAQ,GAAG,MAAMT,aAAa,CAACU,GAAG,CAAC,uBAAuB,EAACC,IAAI,CAAC;EAEtE,OAAOF,QAAQ,CAACE,IAAI;AAEtB,CAAC;AAGD,OAAO,MAAME,kBAAkB,GAAI,MAAOF,IAAI,IAAI;EAChD,MAAMF,QAAQ,GAAG,MAAMT,aAAa,CAACc,IAAI,CAAC,qBAAqB,EAACH,IAAI,CAAC;EAErE,OAAOF,QAAQ,CAACE,IAAI;AAEtB,CAAC;AAED,OAAO,MAAMI,YAAY,GAAI,MAAOJ,IAAI,IAAI;EAC1C,MAAMF,QAAQ,GAAG,MAAMT,aAAa,CAACc,IAAI,CAAC,eAAe,EAACH,IAAI,CAAC;EAE/D,OAAOF,QAAQ,CAACE,IAAI;AAEtB,CAAC;AAED,OAAO,MAAMK,YAAY,GAAI,MAAOL,IAAI,IAAI;EAC1C,MAAMF,QAAQ,GAAG,MAAMT,aAAa,CAACc,IAAI,CAAC,YAAY,EAACH,IAAI,CAAC;EAC5D,IAAGM,IAAI,CAACC,MAAM,KAAI,GAAG,EAAC;IACpBf,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAACN,IAAI,CAACA,IAAI,CAAC,CAAC;IAC5DR,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAGF,IAAI,CAACN,IAAI,CAACA,IAAI,CAACW,KAAM,CAAC;IACrD,OAAOb,QAAQ,CAACE,IAAI;EAErB;EACA,OAAO,IAAI;EAEZ,OAAOF,QAAQ,CAACE,IAAI;AAEtB,CAAC;AAOC,OAAO,MAAMY,aAAa,GAAI,MAAOZ,IAAI,IAAK;EAC3C,MAAMM,IAAI,GAAI,MAAMlB,KAAK,CAACe,IAAI,CAACb,QAAQ,GAAE,YAAY,EAAEU,IAAI,EAAC;IAC3Da,MAAM,EAAE,MAAM;IACdlB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EAEF,CAAC,CAAC;EACE,IAAGW,IAAI,CAACC,MAAM,KAAI,GAAG,EAAC;IAClBf,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAACN,IAAI,CAACA,IAAI,CAAC,CAAC;IAC5DR,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAGF,IAAI,CAACN,IAAI,CAACA,IAAI,CAACW,KAAM,CAAC;IACrD,OAAOL,IAAI;EAEZ;EACA,OAAO,IAAI;AAInB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}